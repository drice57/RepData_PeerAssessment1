setwd("~/20100513/Developer/Online classes/Data Science (2014)/5 - Reproducible Research/Project 1/RepData_PeerAssessment1")
read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
head(data)
data$Weekday <- weekdays(data$date)
data$Weekday <- weekdays(Date(data$date))
data$Weekday <- weekdays(as.Date(data$date))
head(data)
str(data)
names(data)
names(data)[4]<-"dayOfWeek"
names(data)
unique(data$dayOfWeek)
data$Weekend <- (substr(data$dayOfWeek,1,1) = "S")
head(data)
data[300:320,]
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
data$dayOfWeek <- weekdays(as.Date(data$date))
help(ifelse)
data$weekend <- ifelse((substr(data$dayOfWeek,1,1) = "S"),TRUE,FALSE)
head(data)
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
data$dayOfWeek <- weekdays(as.Date(data$date))
head(data)
x<-substr(data$dayOfWeek,1,1)
head(x)
data$weekend <- ifelse((substr(data$dayOfWeek,1,1) == "S"),TRUE,FALSE)
head(data)
head(data$weekend==TRUE)
data
rm(x)
hist(data$interval)
dataSummary = data[,lapply(sum),by="steps,date"]
x<-split(data,data$dayOfWeek)
head(x)
head(x)
x[1]
x[1][1]
x[1][2]
rm(x)
help(aggregate)
x <- aggregate(data$steps, by=data$date, FUN=sum)
x <- aggregate.data.frame(data$steps, by=data$date, FUN=sum)
x <- aggregate(data$steps, by=list(data$date), FUN=sum)
head(x)
x
x <- aggregate(data$steps, by=list(data$date), FUN=sum, na.action = na.omit)
x
help(hist)
help(plot)
plot(x$Group.1,x)
plot(x$Group.1,x$x
plot(x$Group.1,x$x)
plot(x)
plot(as.Date(x$Group.1),x$x)
plot(as.Date(x$Group.1),x$x,type="h")
plot(as.Date(x$Group.1),x$x,type="h",xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
dailyMean <- mean(x$x,na.rm=TRUE)
dailyMedian <- median(x$x,na.rm=TRUE)
xx <- aggregate(data$steps, by=list(data$interval), FUN=sum, na.action = na.omit)
xx <- aggregate(data$steps, by=list(data$interval), FUN=mean, na.action = na.omit)
xx
xx <- aggregate(data$steps, by=list(data$interval), FUN=mean, na.rm=TRUE)
xx
plot(xx$Group.1,x$x,type="h",xlab="Time of day",ylab=" Average# steps",main="Histogram of steps walked by tome of day")
plot(xx$Group.1,xx$x,type="h",xlab="Time of day",ylab=" Average# steps",main="Histogram of steps walked by tome of day")
x <- aggregate(data$steps, by=list(data$date), FUN=sum, na.rm=TRUE)
x
plot(as.Date(x$Group.1),x$x,type="h",xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
View(xx)
sum(is.na(data$steps))
nasub<-data(data$date,is.na(data$steps))
nasub<-data[data$date,is.na(data$steps)]
nasub<-data[,c(steps,date)]
unique(data[,c(date,steps)])
head(data)
head(data[,date])
head(data[,data$date])
head(data[,1:2])
head(unique(data[,1:2]))
unique(data[,1:2])[,is.na(steps)]
unique(data[,1:2])[,steps]
zz<-head(unique(data[,1:2]))
View(zz)
zz<-unique(data[,1:2])
View(zz)
zzz<-zz[is.na(steps),]
zzz<-zz[is.na(zz$steps),]
zzz
nasub
rm(nasub,zz,zzz)
dataSub <- data[is.na(steps)]
dataSub <- data[is.na(data$steps)]
dataSub <- data[is.na(data$steps),]
dataSub <- data[is.na(steps),]
head(dataSub)
dataSub[,steps]<-1
dataSub$steps<-1
head(dataSub)
aggregate(dataSub$steps,by=list(dataSub$date), FUN=sum)
dataSub <- data[is.na(steps),]
dataSub <- data[is.na(data$steps),]
xx[xx$interval==5,]
head(xx)
xx[xx$Group.1==5,]
dataReplace<-data
View(dataReplace)
dataReplace$steps<-ifelse(is.na(dataReplace$steps),xx[dataReplace$interval/5,2],dataReplace$steps)
View(dataReplace)
dataReplace$steps<-ifelse(is.na(dataReplace$steps),xx[round(dataReplace$interval/5),2],dataReplace$steps)
View(dataReplace)
View(xx)
View(xx)
round((0:2355:5)/5)
round(seq(from = 0, to = 2355, by = 5)/5)
seq(from = 0, to = 2355, by = 5)
head(xx)
2355 %% 100
?Aritmetic
?Arithmetic
2355 %/% 100
(2355 %/% 100)*12 + (2355 %% 100)/5
(2355 %/% 100)*12 + (2355 %% 100)/5 + 1
dataReplace <- data
head(dataReplace,288)
dataReplace$steps<-ifelse(is.na(dataReplace$steps),xx[(dataReplace$interval %% 100)*12 + (dataReplace$interval %/% 100)/5 +1,2],dataReplace$steps)
head(dataReplace,288)
dataReplace <- data
zzz<-matrix(1:288,288,2)
View(zzz)
zzz<-xx[,1]
zzz<-cbind(zz,[(zz %% 100)*12 + (zz %/% 100)/5 )
zzz<-cbind(zz,(zz %% 100)*12 + (zz %/% 100)/5 )
zzz
zzzz<-(zzz %% 100)*12 + (zzz %/% 100)/5
(10 %% 100)*12 + (10 %/% 100)/5
(10 %% 100)*12
(10 %/% 100)*12 + (10 %% 100)/5
(10 %/% 100)*12 + (10 %% 100)/5  + 1
(2355 %/% 100)*12 + (2355 %% 100)/5  + 1
dataReplace <- data
dataReplace$steps<-ifelse(is.na(dataReplace$steps),xx[(dataReplace$interval %/% 100)*12 + (dataReplace$interval %% 100)/5 +1,2],dataReplace$steps)
head(dataReplace,288)
View(dataReplace)
View(xx)
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
dataStepsByDay <- aggregate(data$steps, by=list(data$date), FUN=sum, na.rm=TRUE)
View(dataStepsByDay)
names(dataStepsByDay) <- c("date", "totalSteps")
View(dataStepsByDay)
plot(as.Date(dataStepsByDay$date),dataStepsByDay$steps, type="h",
xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
View(dataStepsByDay)
plot(as.Date(dataStepsByDay$date),dataStepsByDay$totalSteps, type="h",
xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
plot(as.Date(dataStepsByDay$date),dataStepsByDay$totalSteps, type="h",
xlab="Date",ylab="Total # steps",main="Histogram of steps walked per day")
dailyMeanSteps <- round(mean(dataStepsByDay$steps, na.rm=TRUE))
dailyMeanSteps <- round(mean(dataStepsByDay$totalSteps, na.rm=TRUE))
dailyMedianSteps <- round(median(dataStepsByDay$totalSteps, na.rm=TRUE))
dailyMaxSteps  <- round(max(dataStepsByDay$totalSteps, na.rm=TRUE))
View(dataStepsByDay)
dateMax <- dataStepsByDay[dataStepsByDay==dailyMaxSteps,]
View(dateMax)
dateMax <- dataStepsByDay[dataStepsByDay$totalSteps==dailyMaxSteps,]
View(dateMax)
View(dateMax)
dateMax <- dataStepsByDay[dataStepsByDay$totalSteps==dailyMaxSteps,1]
dateMax <- dataStepsByDay[dataStepsByDay$totalSteps==dailyMaxSteps,1]
p <- sprintf("Mean number of steps per day is %d", dailyMeanSteps)
print(sprintf("Mean number of steps per day is %d", dailyMeanSteps))
print(sprintf("Median number of steps per day is %d", dailyMedianSteps))
print(sprintf("Maximum number of steps per day is %d, which occured on %s", dailyMaxSteps, dateMaxSteps))
print(sprintf("Maximum number of steps per day is %d, which occured on %s", dailyMaxSteps, dateMax))
dataStepsByTime <- aggregate(data$steps, by=list(data$interval), FUN=mean, na.rm=TRUE)
names(dataStepsByTime) <- c("interval","meanSteps")
plot(dataStepsByTime$interval,dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",main="Histogram of average steps walked by time of day")
strptime(2355, "format"%HH%MM)
strptime(2355, "format"%H%M)
as.character(2359)
paste("0000","300",sep="")
substr(paste("0000","300",sep=""),1,4)
paste("0000","300",sep="")
substr(paste("0000","300",sep=""),1,4)
substr(paste("0000","300",sep=""),nchar("300")-3,nchar("300"))
substr(paste("0000","300",sep=""),nchar("300")+1,nchar("300")+4)
t<-300
t<-as.character(300)
t<-300
sprintf("%02d:%02d",t%%100,t%/%100)
sprintf("%02d:%02d",t%/%100,t%%100)
strftime(sprintf("%02d:%02d",t%/%100,t%%100),"%H%M")
strptime(sprintf("%02d:%02d",t%/%100,t%%100),"%H:%M")
strftime(sprintf("%02d:%02d",t%/%100,t%%100),"%H:%M")
as.Time(sprintf("%02d:%02d",t%/%100,t%%100),"%H:%M")
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
View(data)
data$date <- as.Date(data$date)
View(data)
str(data)
date$time <- strptime(sprintf("%02d:%02d", data$interval %/% 100, data$interval %% 100),"%H:%M")
head(strptime(sprintf("%02d:%02d", data$interval %/% 100, data$interval %% 100),"%H:%M"),10)
head(strptime(sprintf("%s %02d:%02d", as.character(data$date), data$interval %/% 100, data$interval %% 100),"%Y-%m-%d %H:%M"),10)
data$dateTime <- strptime(sprintf("%s %02d:%02d", as.character(data$date), data$interval %/% 100, data$interval %% 100),"%Y-%m-%d %H:%M")
View(data)
tail(data,10)
data <- read.csv("activity.csv", header=TRUE, sep=",", na.strings = "NA", stringsAsFactors = FALSE)
data$dateTime <- strptime(sprintf("%s %02d:%02d", data$date, data$interval %/% 100,
data$interval %% 100),"%Y-%m-%d %H:%M")
View(data)
data$date <- as.Date(data$date)
View(data)
str(data)
dataStepsByDay <- aggregate(data$steps, by=list(data$date), FUN=sum, na.rm=TRUE)
View(dataStepsByDay)
names(dataStepsByDay) <- c("date", "totalSteps")
View(dataStepsByDay)
plot(dataStepsByDay$date,dataStepsByDay$totalSteps, type="h",
xlab="Date",ylab="Total # steps",main="Histogram of steps walked per day")
dailyMeanSteps <- round(mean(dataStepsByDay$totalSteps, na.rm=TRUE))
print(sprintf("Mean number of steps per day is %d", dailyMeanSteps))
dailyMedianSteps <- round(median(dataStepsByDay$totalSteps, na.rm=TRUE))
print(sprintf("Median number of steps per day is %d", dailyMedianSteps))
dailyMaxSteps  <- round(max(dataStepsByDay$totalSteps, na.rm=TRUE))
dateMaxSteps <- dataStepsByDay[dataStepsByDay$totalSteps==dailyMaxSteps,1]
print(sprintf("Maximum number of steps per day is %d, which occured on %s",
dailyMaxSteps, dateMaxSteps))
dataStepsByTime <- aggregate(data$steps, by=list(data$interval), FUN=mean, na.rm=TRUE)
View(dataStepsByTime)
names(dataStepsByTime) <- c("interval","meanSteps")
View(dataStepsByTime)
plot(dataStepsByTime$interval,dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",main="Histogram of average steps walked by time of day")
plot(dataStepsByTime$dateTime, dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",main="Histogram of average steps walked by time of day")
View(dataStepsByTime)
dataStepsByTime$dateTime <- strptime(sprintf("%s %02d:%02d", "2014-07-01",
dataStepsByTime$interval %/% 100,
dataStepsByTime$interval %% 100),"%Y-%m-%d %H:%M")
View(dataStepsByTime)
plot(dataStepsByTime$dateTime, dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",main="Histogram of average steps walked by time of day")
plot(dataStepsByTime$dateTime, dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",
main="Histogram of average steps walked by time of day (5 minute intervals)")
plot(dataStepsByTime$dateTime, dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",
main="Histogram of average steps walked /nby time of day (5 minute intervals)")
plot(dataStepsByTime$dateTime, dataStepsByTime$meanSteps,type="h",
xlab="Time of day",ylab=" Average # steps",
main="Histogram of average steps walked \nby time of day (5 minute intervals)")
timeMaxSteps  <- round(max(dataStepsByTime$meanSteps, na.rm=TRUE))
timeOfMaxSteps <- dataStepsByTime[dataStepsByTime$meanSteps==timeMaxSteps,1]
timeOfMaxSteps <- dataStepsByTime[dataStepsByTime$meanSteps==timeMaxSteps,3]
timeOfMaxSteps <- dataStepsByTime[dataStepsByTime$meanSteps==timeMaxSteps,2]
timeMaxSteps  <- max(dataStepsByTime$meanSteps, na.rm=TRUE)
timeOfMaxSteps <- dataStepsByTime[dataStepsByTime$meanSteps==timeMaxSteps,3]
timeOfMaxSteps
sprintf("%h:%mm",timeOfMaxSteps)
as.character(timeOfMaxSteps)
substr(as.character(timeOfMaxSteps),12,16)
timeMaxSteps  <- round(max(dataStepsByTime$meanSteps, na.rm=TRUE))
timeMaxSteps  <- max(dataStepsByTime$meanSteps, na.rm=TRUE)
timeOfMaxSteps <- dataStepsByTime[dataStepsByTime$meanSteps==timeMaxSteps,3]
print(sprintf("Maximum number of steps per day is %d, which occured on %s",
round(timeMaxSteps), substr(as.character(timeOfMaxSteps),12,16)))
print(sprintf("On average, the maximum number of steps in a 5-minute period is %d, which occured on %s",
round(timeMaxSteps), substr(as.character(timeOfMaxSteps),12,16)))
print(sprintf("On average, the maximum number of steps in a 5-minute period is %d, starting at %s",
round(timeMaxSteps), substr(as.character(timeOfMaxSteps),12,16)))
print(sprintf("Number of intervals with no date is %d.",sum(is.na(data$steps)))
)
print(sprintf("Number of intervals with no date is %d.",sum(is.na(data$steps))))
print(sprintf("Number of 5-minute intervals with no data is %d.",sum(is.na(data$steps))))
dataSubset <- data[is.na(data$steps),]
View(dataSubset)
dataSubset$steps<-1
View(dataSubset)
aggregate(dataSubset$steps,by=list(dataSubset$date), FUN=sum)
datesNA <- aggregate(dataSubset$steps,by=list(dataSubset$date), FUN=sum)
View(datesNA)
View(datesNA)
names(datesNA) <- c("date","# of NAs")
View(datesNA)
print(sprintf("Dates with missing values, and number of missing:"))
print(datesNA)
View(dataStepsByTime)
dataReplaceNA <- data
dataReplaceNA$steps<-ifelse(is.na(dataReplaceNA$steps),
dataStepsByTime[(dataReplaceNA$interval %/% 100)*12
+ (dataReplaceNA$interval %% 100)/5 +1,2],dataReplaceNA$steps)
View(dataReplaceNA)
View(dataReplaceNA)
dataStepsByDay <- aggregate(dataReplaceNA$steps, by=list(dataReplaceNA$date), FUN=sum)
View(dataStepsByDay)
names(dataStepsByDay) <- c("date", "totalSteps")
View(dataStepsByDay)
plot(dataStepsByDay$date,dataStepsByDay$steps, type="h",
xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
plot(dataStepsByDay$date,dataStepsByDay$totalSteps, type="h",
xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
plot(dataStepsByDay$date,dataStepsByDay$totalSteps, type="h",
xlab="Date",ylab="# steps",main="Histogram of steps walked per day")
dataReplaceNA$weekend <- ifelse((substr(weekdays(as.Date(dataReplaceNA$date)),1,1)
== "S"),"weekend","weekday")
View(dataReplaceNA)
tail(dataReplaceNA)
str(dataReplaceNA)
dataReplaceNA$weekend<- as.factor(dataReplaceNA$weekend)
str(dataReplaceNA)
library(lattice)
xyplot(steps ~ dateTime | weekend, data=dataReplaceNA, layout = c(1,2))
par(mfrow=c(2,1))
with( dataReplaceNA, {})
with( dataReplaceNA, {
xyplot(steps ~ as.character(dateTime) | weekend, data=dataReplaceNA, layout = c(1,2))
xyplot(steps ~ interval | weekend, data=dataReplaceNA, layout = c(1,2))
xyplot(steps ~ interval | weekend, data=dataReplaceNA, layout = c(1,2), type="l")
dataStepsByTime <- aggregate(dataReplaceNA$steps, by=list(dataReplaceNA$interval, dataReplaceNA$weekend), FUN=mean, na.rm=TRUE)
View(dataStepsByTime)
View(dataStepsByTime)
names(dataStepsByTime) <- c("interval","meanSteps","weekend")
View(dataStepsByTime)
names(dataStepsByTime) <- c("interval","weekend", "meanSteps")
View(dataStepsByTime)
xyplot(meanSteps ~ interval | weekend, data=dataReplaceNA, layout = c(1,2), type="l")
xyplot(meanSteps ~ interval | weekend, data=dataStepsByTime, layout = c(1,2), type="l")
p <- xyplot(meanSteps ~ interval | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend)
p <- xyplot(meanSteps ~ interval | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
dataStepsByTime$dateTime <- strptime(sprintf("%s %02d:%02d", "2014-07-01",
dataStepsByTime$interval %/% 100,
dataStepsByTime$interval %% 100),"%Y-%m-%d %H:%M")
View(dataStepsByTime)
p <- xyplot(meanSteps ~ dateTime | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
p <- xyplot(meanSteps ~ as.POSIXct(dateTime) | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
p <- xyplot(meanSteps ~ as.POSIXct(dateTime,format="%H:%M") | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
p <- xyplot(meanSteps ~ as.POSIXlt(dateTime,format="%H:%M") | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
p <- xyplot(meanSteps ~ as.POSIXct(dateTime,format="%H:%M") | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
head(as.POSIXct(dataStepsByTime$dateTime,format="%H:%M"))
head(format(dataStepsByTime$dateTime,format="%H:%M"))
p <- xyplot(meanSteps ~ format(dataStepsByTime$dateTime,format="%H:%M") | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
plot(p)
dataStepsByTime$dateTime <- format(dataStepsByTime$dateTime,format="%H:%M")
View(dataStepsByTime)
str(dataStepsByTime)
p <- xyplot(meanSteps ~ dateTime | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print()
print(p)
p <- xyplot(meanSteps ~ interval | weekend, data=dataStepsByTime,
layout = c(1,2), type="l", xlab="Time of day", ylab="Average number of steps",
main="Weekday vs. weekend")
print(p)
View(dataStepsByDay)
dailyMeanSteps <- round(mean(dataStepsByDay$totalSteps))
print(sprintf("Mean number of steps per day is %d", dailyMeanSteps))
dailyMedianSteps <- round(median(dataStepsByDay$totalSteps)
)
print(sprintf("Median number of steps per day is %d", dailyMedianSteps))
dailyMeanSteps <- round(mean(dataStepsByDay$totalSteps))
